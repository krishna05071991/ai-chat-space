# Netlify deployment configuration for Chat Models
[build]
  # Build command
  command = "npm run build"
  
  # Output directory
  publish = "dist"
  
  # Environment variables for build
  [build.environment]
    NODE_VERSION = "18"

# SPA routing - redirect all routes to index.html for client-side routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = false

# Security and performance headers
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    
    # Performance headers
    Cache-Control = "public, max-age=31536000, immutable"

# Special headers for HTML files (different cache strategy)
[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Headers for static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Headers for images
[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Headers for fonts
[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

# API routing for Supabase Edge Functions (if needed)
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Form handling (for future contact forms if needed)
[[redirects]]
  from = "/contact"
  to = "/index.html"
  status = 200

# Environment-specific redirects for preview deployments
[context.deploy-preview]
  [context.deploy-preview.environment]
    NODE_ENV = "development"

[context.branch-deploy]
  [context.branch-deploy.environment]
    NODE_ENV = "development"

[context.production]
  [context.production.environment]
    NODE_ENV = "production"